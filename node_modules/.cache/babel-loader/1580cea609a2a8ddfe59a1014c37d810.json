{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\99489\\\\Desktop\\\\COMP9323\\\\aws\\\\amplifyapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\99489\\\\Desktop\\\\COMP9323\\\\aws\\\\amplifyapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\99489\\\\Desktop\\\\COMP9323\\\\aws\\\\amplifyapp\\\\src\\\\page\\\\AddExpert.jsx\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { apiCall } from '../Main';\nimport { useNavigate } from 'react-router-dom';\nimport ExpertHeader from '../component/ExpertHeader';\nimport { styled } from '@mui/material/styles';\nimport PageReturnButton from '../component/PageReturnButton';\nvar theme = createTheme(); // style for button color\n\nvar ColorButton = styled(Button)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    color: theme.palette.getContrastText('#000000'),\n    backgroundColor: '#000000',\n    '&:hover': {\n      backgroundColor: '#000000'\n    }\n  };\n});\nexport default function AddExpert() {\n  var _this = this;\n\n  var navigate = useNavigate(); // Before submit the infomation, check the name, email format\n  // are valid, and then submit it to add a new expert.\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n      var data, interested_category_ids, body, nameReg, reg, data2;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              data = new FormData(event.currentTarget);\n              interested_category_ids = categories.filter(function (category, i) {\n                return category.checked;\n              }).map(function (categorie) {\n                return categorie.id;\n              });\n              body = {\n                username: data.get('name'),\n                email: data.get('email'),\n                password: data.get('password'),\n                interested_category_ids: interested_category_ids\n              };\n              nameReg = new RegExp(/^[0-9A-Za-z]+ [0-9A-Za-z]+/);\n              reg = new RegExp(/^([a-zA-Z0-9._-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/);\n\n              if (!(data.get('name').length < 3)) {\n                _context.next = 10;\n                break;\n              }\n\n              alert('The expert name should have at least 3 characters');\n              _context.next = 22;\n              break;\n\n            case 10:\n              if (nameReg.test(data.get('name'))) {\n                _context.next = 14;\n                break;\n              }\n\n              alert('The expert name format should be \"Firstname Lastname\"');\n              _context.next = 22;\n              break;\n\n            case 14:\n              if (reg.test(data.get('email'))) {\n                _context.next = 18;\n                break;\n              }\n\n              alert('The expert email format is not valid');\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.next = 20;\n              return apiCall('/register_expert_account', 'POST', body, navigate);\n\n            case 20:\n              data2 = _context.sent;\n\n              if (typeof data2 === 'string' && (!data2.startsWith('200') || !data2.startsWith('201'))) {\n                alert('something wrong');\n              } else {\n                alert('You have successfully add an expert');\n              }\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // set the categories to be checked.\n\n\n  var setChecked = function setChecked(value, index) {\n    categories[index].checked = value;\n  };\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      categories = _React$useState2[0],\n      setCategories = _React$useState2[1]; // Get the categories list.\n\n\n  var getCategories = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return apiCall('/categories', 'GET', {}, navigate);\n\n            case 2:\n              data = _context2.sent;\n              data.categories.map(function (categorie, i) {\n                categorie.checked = false;\n                return categorie;\n              });\n              setCategories(data.categories);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getCategories() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      i = _React$useState4[0],\n      setI = _React$useState4[1];\n\n  if (i === 1) {\n    getCategories();\n    setI(i + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExpertHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-end',\n      justifyContent: 'flex-end',\n      width: '85%',\n      paddingTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"outlined\",\n    style: {\n      backgroundColor: '#000000',\n      color: 'white',\n      right: '0px'\n    },\n    onClick: function onClick() {\n      navigate('/expert_main');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Return\")), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      marginTop: 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    sx: {\n      m: 1,\n      bgcolor: 'primary.main',\n      backgroundColor: '#000000',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Add Expert\"), /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    sx: {\n      mt: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"name\",\n    label: \"Name\",\n    name: \"name\",\n    autoComplete: \"name\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, categories.map(function (category, i) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: i,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        onClick: function onClick(e) {\n          setChecked(e.target.checked, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 30\n        }\n      }),\n      label: category.category_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 27\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ColorButton, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n}","map":{"version":3,"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","apiCall","useNavigate","ExpertHeader","styled","PageReturnButton","theme","ColorButton","color","palette","getContrastText","backgroundColor","AddExpert","navigate","handleSubmit","event","preventDefault","data","FormData","currentTarget","interested_category_ids","categories","filter","category","i","checked","map","categorie","id","body","username","get","email","password","nameReg","RegExp","reg","length","alert","test","data2","startsWith","setChecked","value","index","useState","setCategories","getCategories","setI","display","alignItems","justifyContent","width","paddingTop","right","marginTop","flexDirection","m","bgcolor","mt","e","target","category_name","mb"],"sources":["C:/Users/99489/Desktop/COMP9323/aws/amplifyapp/src/page/AddExpert.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { apiCall } from '../Main';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ExpertHeader from '../component/ExpertHeader';\r\nimport { styled } from '@mui/material/styles';\r\nimport PageReturnButton from '../component/PageReturnButton';\r\n\r\nconst theme = createTheme();\r\n\r\n// style for button color\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.getContrastText('#000000'),\r\n  backgroundColor: '#000000',\r\n  '&:hover': {\r\n    backgroundColor: '#000000',\r\n  },\r\n}));\r\n\r\nexport default function AddExpert() {\r\n  const navigate = useNavigate();\r\n  \r\n  // Before submit the infomation, check the name, email format\r\n  // are valid, and then submit it to add a new expert.\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const interested_category_ids = categories.filter((category, i) => { return category.checked }).map((categorie) => { return categorie.id });\r\n    const body = ({\r\n      username: data.get('name'),\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n      interested_category_ids: interested_category_ids\r\n\r\n    });\r\n    const nameReg = new RegExp(/^[0-9A-Za-z]+ [0-9A-Za-z]+/);\r\n    const reg = new RegExp(/^([a-zA-Z0-9._-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/);\r\n    if (data.get('name').length < 3) {\r\n      alert('The expert name should have at least 3 characters');\r\n    } else if (!(nameReg.test(data.get('name')))) {\r\n      alert('The expert name format should be \"Firstname Lastname\"');\r\n    } else if (!(reg.test(data.get('email')))) {\r\n      alert('The expert email format is not valid');\r\n    } else {\r\n      const data2 = await apiCall('/register_expert_account', 'POST', body, navigate);\r\n      if (typeof (data2) === 'string' && (!data2.startsWith('200') || !data2.startsWith('201'))) {\r\n        alert('something wrong')\r\n      } else {\r\n        alert('You have successfully add an expert');\r\n      }\r\n    }\r\n  };\r\n\r\n  // set the categories to be checked.\r\n  const setChecked = (value, index) => {\r\n    categories[index].checked = value;\r\n  }\r\n  const [categories, setCategories] = React.useState([]);\r\n\r\n  // Get the categories list.\r\n  const getCategories = async () => {\r\n    const data = await apiCall('/categories', 'GET', {}, navigate);\r\n    data.categories.map((categorie, i) => { categorie.checked = false; return categorie });\r\n    setCategories(data.categories);\r\n  };\r\n  const [i, setI] = React.useState(1);\r\n  if (i === 1) {\r\n    getCategories();\r\n    setI(i + 1);\r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ExpertHeader/>\r\n      <div style={{display:'flex', alignItems: 'flex-end', justifyContent: 'flex-end', width: '85%', paddingTop: '50px'}}>\r\n        <button \r\n          variant=\"outlined\" \r\n          style={{backgroundColor: '#000000', color: 'white', right: '0px'}} \r\n          onClick={() => { navigate('/expert_main') }}\r\n        >\r\n          Return\r\n        </button>\r\n      </div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        \r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n      \r\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main', backgroundColor: '#000000', color: 'white' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Add Expert\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n\r\n            <div>\r\n              {\r\n                categories.map((category, i) => {\r\n                  return (<FormControlLabel\r\n                    key={i}\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" onClick={(e) => { setChecked(e.target.checked, i); }} />}\r\n                    label={category.category_name}\r\n                  />)\r\n                })\r\n              }\r\n            </div>\r\n\r\n            <ColorButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Submit\r\n            </ColorButton>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}